{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/index.mjs","../../src/components/Logo.svelte","../../src/components/Footer.svelte","../../src/components/NavBar.svelte","../../src/components/Language.svelte","../../src/components/Profile.svelte","../../src/components/Header.svelte","../../src/components/Interaction.svelte","../../src/components/Project.svelte","../../src/store/Projects.js","../../src/components/Carousel.svelte","../../src/components/Main.svelte","../../src/routes/Blog.svelte","../../src/routes/CreateProject.svelte","../../src/routes/Governance.svelte","../../src/routes/Help.svelte","../../src/routes/Projects.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, writable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Store that returns the currently-matched params.\n * Despite this being writable, consumers should not change the value of the store.\n * It is exported as a readable store only (in the typings file)\n */\nexport const params = writable(undefined)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        const newState = {\n            ...history.state\n        }\n        delete newState['__svelte_spa_router_scrollX']\n        delete newState['__svelte_spa_router_scrollY']\n        window.history.replaceState(newState, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Dictionary with options for the link action.\n * @typedef {Object} LinkActionOpts\n * @property {string} href - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n * @property {boolean} disabled - If true, link is disabled\n */\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string|LinkActionOpts} opts - Options object. For legacy reasons, we support a string too which will be the value for opts.href\n */\nexport function link(node, opts) {\n    opts = linkOpts(opts)\n\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, opts)\n\n    return {\n        update(updated) {\n            updated = linkOpts(updated)\n            updateLink(node, updated)\n        }\n    }\n}\n\n/**\n * Tries to restore the scroll state from the given history state.\n *\n * @param {{__svelte_spa_router_scrollX: number, __svelte_spa_router_scrollY: number}} [state] - The history state to restore from.\n */\nexport function restoreScroll(state) {\n    // If this exists, then this is a back navigation: restore the scroll position\n    if (state) {\n        window.scrollTo(state.__svelte_spa_router_scrollX, state.__svelte_spa_router_scrollY)\n    }\n    else {\n        // Otherwise this is a forward navigation: scroll to top\n        window.scrollTo(0, 0)\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, opts) {\n    let href = opts.href || node.getAttribute('href')\n\n    // Destination must start with '/' or '#/'\n    if (href && href.charAt(0) == '/') {\n        // Add # to the href attribute\n        href = '#' + href\n    }\n    else if (!href || href.length < 2 || href.slice(0, 2) != '#/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    node.setAttribute('href', href)\n    node.addEventListener('click', (event) => {\n        // Prevent default anchor onclick behaviour\n        event.preventDefault()\n        if (!opts.disabled) {\n            scrollstateHistoryHandler(event.currentTarget.getAttribute('href'))\n        }\n    })\n}\n\n// Internal function that ensures the argument of the link action is always an object\nfunction linkOpts(val) {\n    if (val && typeof val == 'string') {\n        return {\n            href: val\n        }\n    }\n    else {\n        return val || {}\n    }\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {string} href - Destination\n */\nfunction scrollstateHistoryHandler(href) {\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {onDestroy, createEventDispatcher, afterUpdate} from 'svelte'\nimport {parse} from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = parse(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {boolean} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\nlet popStateChanged = null\nif (restoreScrollState) {\n    popStateChanged = (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && (event.state.__svelte_spa_router_scrollY || event.state.__svelte_spa_router_scrollX)) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    }\n    // This is removed in the destroy() invocation below\n    window.addEventListener('popstate', popStateChanged)\n\n    afterUpdate(() => {\n        restoreScroll(previousScrollState)\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nconst unsubscribeLoc = loc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData,\n            params: (match && typeof match == 'object' && Object.keys(match).length) ? match : null\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n\n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name,\n                    params: componentParams\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name,\n            params: componentParams\n        })).then(() => {\n            params.set(componentParams)\n        })\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n    params.set(undefined)\n})\n\nonDestroy(() => {\n    unsubscribeLoc()\n    popStateChanged && window.removeEventListener('popstate', popStateChanged)\n})\n</script>\n","export function parse(str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /*#__PURE__*/ /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? 'wild' : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n","<script>\n    import {link} from 'svelte-spa-router';\n    \n    let DaovotionLogo = \"https://nebairevelations.com/wp-content/uploads/2021/08/penrose_triangle_web.svg\";\n</script>\n\n<style>\n    .Logo {\n        margin-left: 150px;\n    }\n\n    .Logo-img {\n        width: 70px;\n        height: 70px;\n    }\n</style>\n\n<div class=\"Logo\">\n    <a a href=\"/\" use:link>\n        <img class=\"Logo-img\" src={DaovotionLogo} alt=\"Daovotion Logo\">\n    </a>\n</div>","<script>\n    import Logo from \"./Logo.svelte\";\n</script>\n\n<style>\n    .Footer {\n        background-color: black;\n        width: 100%;\n        height: auto;\n        display: flex;\n        justify-content: space-evenly;\n        color: white;\n        padding-top: 50px;\n    }\n\n    .Footer div {\n        width: 20%;\n        text-align: center;\n        width: 20%;\n    }\n\n    .Footer-logo {\n        margin-top: 50px;\n    }\n\n    .Footer h5 {\n        text-align: start;\n        color: white;\n    }\n\n    .Footer ul {\n        margin: 0;\n        padding: 0;\n    }\n\n    .Footer li {\n        display: flex;\n        list-style: none;\n        margin-bottom: 20px;\n        font-size: 1rem;\n    }\n\n    .Footer i {\n        font-size: 1.3rem;\n        margin-right: 20px;\n    }\n\n    .Footer a {\n        text-align: center;\n        text-decoration: none;\n        color: white;\n        display: flex;\n        padding-left: 10px;\n        border-left: 1px solid #66ff99;\n        border-bottom: 1px solid #66ff99;\n    }\n\n    .Footer a:hover {\n        color: #66ff99;\n    }\n</style>\n\n<div class=\"Footer\">\n    <div class=\"Footer-logo\">\n        <Logo />\n    </div>\n    <div>\n        <h5>Contacto</h5>\n        <ul>\n            <li>\n                <i class=\"fa-solid fa-location-dot\"></i>\n                Colombia, Bogotá.\n            </li>\n            <li>\n                <i class=\"fa-solid fa-envelope\"></i>\n                daovotion@gmail.com\n            </li>\n        </ul>\n    </div>\n    <div>\n        <h5>Informacion</h5>\n        <ul>\n            <li><a href=\"__blank\">Whitepaper</a></li>\n            <li><a href=\"__blank\">FAQs</a></li>\n            <li><a href=\"__blank\">Sobre nosotros</a></li>\n        </ul>\n    </div>\n    <div>\n        <h5>Redes</h5>\n        <ul>\n            <li><a href=\"__blank\">Discord</a></li>\n            <li><a href=\"__blank\">Telegram</a></li>\n            <li><a href=\"__blank\">Twitter</a></li>\n            <li><a href=\"__blank\">Instagram</a></li>\n        </ul>\n    </div>\n</div>","<script>\n    import {link} from 'svelte-spa-router'\n</script>\n\n<style>\n    .NavBar {\n        margin-left: 100px;\n        background-color: black;\n    }\n\n    .NavBar-ul {\n        padding: 0;\n        list-style: none;\n    }\n\n    .NavBar-ul-li {\n        display: inline-block;\n        padding-right: 2rem;\n    }\n\n    .NavBar-ul-li a {\n        color: white;\n        text-decoration: none;\n        padding-bottom: 10px;\n        border-bottom: 1px solid #66ff99;\n    }\n\n    .NavBar-ul-li a:hover {\n        color: #66ff99;\n    }\n</style>\n\n<div class=\"NavBar\">\n    <nav>\n        <ul class=\"NavBar-ul\">\n            <li class=\"NavBar-ul-li\"><a href=\"/projects/\" use:link>Proyectos</a></li>\n            <li class=\"NavBar-ul-li\"><a href=\"/governance/\" use:link>Gobernanza</a></li>\n            <li class=\"NavBar-ul-li\"><a href=\"/blog/\" use:link>Blog</a></li>\n            <li class=\"NavBar-ul-li\"><a href=\"/help/\" use:link>Ayuda</a></li>\n        </ul>\n    </nav>\n</div>","<script>\n    let SpanishFlag = \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Bandera_de_Espa%C3%B1a.svg/400px-Bandera_de_Espa%C3%B1a.svg.png\";\n    let EnglishFlag = \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Flag_of_the_United_Kingdom.svg/400px-Flag_of_the_United_Kingdom.svg.png\";\n</script>\n\n<style>\n    .Language-dropdown {\n        position: relative;\n        display: inline-block;\n        margin-left: 300px;\n    }\n\n    p {\n        font-family: 'Inter', sans-serif;\n    }\n\n    .Language-dropdown-button {\n        width: 60px;\n        height: 40px;\n        border: none;\n        text-align: center;\n        display: inline-block;\n        font-size: 1.1rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin: 0;\n        padding: 3px;\n        border-radius: 3px;\n        background-color: black;\n        color: white;\n    }\n\n    .Language-dropdown-button img {\n        width: 20px; \n        height: 15px;\n    }\n\n    .Language-dropdown-content {\n        width: 60px;\n        display: none;\n        position: absolute;\n        z-index: 1;\n        font-size: 1.1rem; \n        border: 0.5px solid #66ff99;\n        border-radius: 3px;\n    }\n\n    .Language-dropdown:hover .Language-dropdown-content {\n        display: block;\n    }\n    \n    .Language-dropdown-content li {\n        display: flex;\n        text-align: center;\n    }\n\n    .Language-dropdown-content li p {\n        margin-left: 5px;\n        margin-right: 10px;\n        margin-top: 10px;\n        margin-bottom: 10px;\n    }\n\n    .Language-dropdown-content img {\n        margin-top: 14px;\n        width: 20px; \n        height: 15px;\n    }\n  \n    .Language-dropdown-content li:hover {\n        color: #66ff99;\n    }\n</style>\n\n<div class=\"Language\">\n    <div class=\"Language-dropdown\">\n        <button class=\"Language-dropdown-button\">\n            <p>ES</p>\n            <img src={SpanishFlag} alt=\"Spanish Flag\">\n        </button>\n          \n        <div class=\"Language-dropdown-content\">\n            <li>\n                <p>ES</p> \n                <img src={SpanishFlag} alt=\"Spanish Flag\">\n            </li>\n            <li>\n                <p>EN</p> \n                <img src={EnglishFlag} alt=\"English Flag\">\n            </li>\n        </div>\n    </div>\n</div>","<style>\n    .Profile {\n        margin-left: 50px;\n    }\n\n    .Profile-button {\n        width: 150px;\n        height: 50px;\n        border: none;\n        padding: 10px 15px;\n        text-align: center;\n        display: inline-block;\n        font-size: 1rem;\n        background-color: #66ff99;\n        border-radius: 50px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: black;\n    }\n\n    p {\n        font-family: 'Inter', sans-serif;\n        font-weight: bold;\n    }\n</style>\n\n<div class=\"Profile\">\n    <button class=\"Profile-button\">\n        <!-- <i class=\"fa-solid fa-user\"></i>        \n        <p>Profile</p> -->\n        <p>Conectar Wallet</p>\n    </button>\n</div>","<script>\n    import Logo from \"./Logo.svelte\";\n    import NavBar from \"./NavBar.svelte\";\n    import Language from \"./Language.svelte\";\n    import Profile from \"./Profile.svelte\";\n</script>\n\n<style>\n    .Header-content {\n        width: 100%;\n        background-color: black;\n        color: white;\n        padding: 10px;\n        display: flex;\n        align-items: center;\n        font-size: 1.3rem;\n    }\n</style>\n\n<div class=\"Header\">\n    <header class=\"Header-content\">\n        <Logo />\n        <NavBar />\n        <Language />\n        <Profile />\n    </header>\n</div>","<script>\n    import {link} from 'svelte-spa-router';\n</script>\n\n<style>\n    .Interaction {\n        margin-top: 40%;\n        width: 100%;\n        display: inline-flex;\n        justify-content: center;\n        color: white;\n    }\n\n    .Interaction div {\n        width: 350px;\n        height: 350px;\n        border: 1px solid #66ff99;\n        border-radius: 10px;\n        padding: 10px;\n        text-align: center;\n        margin: 0% 5%;\n    }\n\n    .Interaction a {\n        text-decoration: none;\n        height: auto;\n        height: 50px;\n        border: none;\n        padding: 10px 15px;\n        text-align: center;\n        font: bold;\n        font-size: 1rem;\n        background-color: #66ff99;\n        border-radius: 50px;\n        color: black;\n        font-family: 'Inter', sans-serif;\n        font-weight: bold;\n        margin-bottom: 10%;\n    }\n</style>\n\n<div class=\"Interaction\">\n    <div class=\"Interaction-support-project\">\n        <h2>¡Se pionero!</h2>\n        <h3>Adquiere planetas al mejor precio</h3>\n        <p>Apoyando proyectos novedosos tendrás la oportunidad de ganar comisiones por la futura venta tus MetaIslas.</p>\n        <a href=\"/projects/\" use:link>Explorar proyectos</a>\n    </div>\n    <div class=\"Interaction-create-project\">\n        <h2>Crea tu proyecto</h2>\n        <h3>¡Nace una Estrella! <br> Se fundador de tu sistema planetario</h3>\n        <p>Desarrollas Software Libre? Creas contenido digital? Crea comunidad con el impacto de tu idea creativa.</p>\n        <a a href=\"/create_project/\" use:link>Crear proyecto</a>\n    </div>\n</div>","<script>\n    let IslaImg = \"https://freepngimg.com/download/island/14-2-island-free-download-png.png\";\n    \n    export let name;\n    export let description;\n    export let logo;\n    export let url;\n    export let score;\n    export let funds;\n    export let price;\n</script>\n\n<style>\n    .Project {\n        margin-top: 50px;\n        width: 300px;\n        height: 400px;\n        font-size: 0.8rem;\n        box-shadow: 0px 1px 20px 0px #66ff99;\n        border-radius: 30px;\n        text-align: center;\n        padding: 30px;\n        color: white;\n    }\n\n    .Project-info {\n        text-align: center;\n    }\n\n    .Project-info-header {\n        margin-top: 5%;\n        margin-left: 10%;\n        display: flex;\n    }\n\n    .Project-info-header h1 {\n        margin-left: 10%;\n        display: flex;\n    }\n\n    .Project-img {\n        width: 50px;\n        height: 50px;\n        border-radius: 50%;\n        border: 1px solid #66ff99;\n    }\n\n    .Project-description {\n        word-wrap: break-word;\n    }\n\n    .Project-repository {\n        color: #66ff99;\n    }\n\n    .Project-balance {\n        margin-top: 10px;\n        display: flex;\n        justify-content: space-evenly;\n    }\n\n    .Project-balance h2 {\n        margin-left: 20px;\n    }\n\n    .Project-prestige-icon {\n        display: flex;\n    }\n\n    .fa-star {\n        margin-top: 10px;\n        color: gold;\n        font-size: 30px;\n    }\n\n    .Project-funds-icon {\n        display: flex;\n    }\n\n    .fa-coins {\n        margin-top: 10px;\n        color: gold;\n        font-size: 30px;\n    }\n\n    .Project-land-icon {\n        margin-left: 30%;\n        display: flex;\n    }\n\n    .Project-land h3 {\n        margin-top: 10px;\n        margin-bottom: 0px;\n    }\n\n    .Project-land-icon {\n        background-color: black;\n    }\n\n    .Project-land-icon h2 {\n        margin-left: 30px;\n        margin-top: 20px;\n        display: flex;\n    }\n\n    .Project-land img {\n        width: 60px;\n        height: 60px;\n    }\n\n    .Project-land-button {\n        margin-top: 10px;\n        width: 100px;\n        height: 50px;\n        border: none;\n        padding: 10px 15px;\n        text-align: center;\n        font-size: 1rem;\n        background-color: black;\n        border-radius: 50px;\n        border: 2px solid #66ff99;\n        color:#66ff99;\n        font-family: 'Inter', sans-serif;\n        font-weight: bold;\n    }\n</style>\n\n<div class=\"Project\" id=\"Project\">\n    <div>\n        <div class=\"Project-info\">\n            <div class=\"Project-info-header\">\n                <img class=\"Project-img\" src={logo} alt=\"Project img\">\n                <h1>{name}</h1>\n            </div>\n            <p class=\"Project-description\">{description}</p>\n            <a class=\"Project-repository\" href=\"__blank\">{url}</a>\n        </div>\n        <div class=\"Project-balance\">\n            <div class=\"Project-prestige-icon\">\n                <i class=\"fa-solid fa-star\"></i>\n                <h2>{score}</h2>\n            </div>\n            <div class=\"Project-funds-icon\">\n                <i class=\"fa-solid fa-coins\"></i>\n                <h2>${funds}</h2>\n            </div>\n        </div>\n        <div class=\"Project-land\">\n            <h3>¡Apoya este proyecto!</h3>\n            <div class=\"Project-land-icon\">\n                <img src={IslaImg} alt=\"Isla\">\n                <h2>{price}</h2>\n            </div>\n            <button class=\"Project-land-button\">Comprar</button>\n        </div>\n    </div>\n</div>","export const projects = [\n    { name: 'Proyecto 1', description: 'fwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWfwcdSEfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvC' , logo: \"https://imgs.search.brave.com/2qsV1m3NAbyCkQKYdO0tbd4rOK-bUydTX5DWb8KqcpI/rs:fit:844:225:1/g:ce/aHR0cHM6Ly90c2Uy/Lm1tLmJpbmcubmV0/L3RoP2lkPU9JUC5n/eGxsVDBmTHlhTzF6/bkxoSGNwa0ZnSGFF/SyZwaWQ9QXBp\", url: \"www.github.com.ar\", score: 45, funds: 3000, price: 34},\n    { name: 'Proyecto 2', description: 'fwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCvhvCfwcdSEVFWEDvwefsdcjvhvC' , logo: \"https://imgs.search.brave.com/2qsV1m3NAbyCkQKYdO0tbd4rOK-bUydTX5DWb8KqcpI/rs:fit:844:225:1/g:ce/aHR0cHM6Ly90c2Uy/Lm1tLmJpbmcubmV0/L3RoP2lkPU9JUC5n/eGxsVDBmTHlhTzF6/bkxoSGNwa0ZnSGFF/SyZwaWQ9QXBp\", url: \"www.github.com.ar\", score: 45, funds: 3000, price: 34},\n    { name: 'Proyecto 3', description: 'fwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCcjvhvC' , logo: \"https://imgs.search.brave.com/2qsV1m3NAbyCkQKYdO0tbd4rOK-bUydTX5DWb8KqcpI/rs:fit:844:225:1/g:ce/aHR0cHM6Ly90c2Uy/Lm1tLmJpbmcubmV0/L3RoP2lkPU9JUC5n/eGxsVDBmTHlhTzF6/bkxoSGNwa0ZnSGFF/SyZwaWQ9QXBp\", url: \"www.github.com.ar\", score: 45, funds: 3000, price: 34},\n    { name: 'Proyecto 4', description: 'fwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCcjvhvC' , logo: \"https://imgs.search.brave.com/2qsV1m3NAbyCkQKYdO0tbd4rOK-bUydTX5DWb8KqcpI/rs:fit:844:225:1/g:ce/aHR0cHM6Ly90c2Uy/Lm1tLmJpbmcubmV0/L3RoP2lkPU9JUC5n/eGxsVDBmTHlhTzF6/bkxoSGNwa0ZnSGFF/SyZwaWQ9QXBp\", url: \"www.github.com.ar\", score: 45, funds: 3000, price: 34},\n    { name: 'Proyecto 5', description: 'fwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCfwcdSEVFWEDvwefsdcjvhvCdcjvhvC' , logo: \"https://imgs.search.brave.com/2qsV1m3NAbyCkQKYdO0tbd4rOK-bUydTX5DWb8KqcpI/rs:fit:844:225:1/g:ce/aHR0cHM6Ly90c2Uy/Lm1tLmJpbmcubmV0/L3RoP2lkPU9JUC5n/eGxsVDBmTHlhTzF6/bkxoSGNwa0ZnSGFF/SyZwaWQ9QXBp\", url: \"www.github.com.ar\", score: 45, funds: 3000, price: 34},\n];","<script>\n    import Project from \"./Project.svelte\";\n    import { projects } from \"../store/Projects\";\n</script>\n\n<style>    \n    @keyframes display {\n        0% {\n        transform: translateX(150px);\n        opacity: 0;\n        }\n        10% {\n        transform: translateX(0);\n        opacity: 1;\n        }\n        20% {\n        transform: translateX(0);\n        opacity: 1;\n        }\n        30% {\n        transform: translateX(-100px);\n        opacity: 0;\n        }\n        50% {\n        transform: translateX(-100px);\n        opacity: 0;\n        }\n        100% {\n        transform: translateX(-50px);\n        opacity: 0;\n        }\n    }\n    \n    .Carousel {\n        position: relative;\n    }\n    \n    .Carousel > div {\n        position: absolute;\n        top: 0;\n        left: calc(50% - 100px);\n        opacity: 0;\n        animation: display 20s infinite;\n    }\n    \n    div:nth-child(2) {\n    animation-delay: 4s;\n    }\n\n    div:nth-child(3) {\n    animation-delay: 8s;\n    }\n\n    div:nth-child(4) {\n    animation-delay: 12s;\n    }\n\n    div:nth-child(5) {\n    animation-delay: 16s;\n    }\n</style>\n\n<div class=\"Carousel\">\n    <div>\n        <Project {...projects[0]}/>\n    </div>\n    <div>\n        <Project {...projects[1]}/>\n    </div>    \n    <div>\n        <Project {...projects[2]}/>\n    </div>\n    <div>\n        <Project {...projects[3]}/>\n    </div>\n    <div>\n        <Project {...projects[4]}/>\n    </div>\n</div>","<script>\n    import Interaction from \"./Interaction.svelte\";\n    import Project from \"./Project.svelte\";\n    import {link} from 'svelte-spa-router'\n    import Carrousel from './Carousel.svelte';\n</script>\n\n<style>\n    .Main {\n        background-color: black;\n        width: 100%;\n        height: auto;\n        font-size: 1.3rem;\n        position: relative;\n    }\n\n    .Main-section-description {\n        color: white;\n        position: absolute;\n        width: 800px;\n        margin-top: 100px;\n        margin-left: 150px;\n    }\n\n    .Main-section-description h1 {\n        -webkit-text-stroke: 1px #66ff99;\n        color: black; /* width and color */\n        margin: 0;\n        font-size: 4rem;\n        font-weight: 700;\n    }\n\n    .Main-section-description h3 {\n        font-weight: 700;\n    }\n\n    .Main-section-description p {\n        margin-bottom: 40px;\n    }\n\n    .Main-section-description a {\n        text-decoration: none;\n        width: auto;\n        height: 50px;\n        padding: 10px 20px;\n        font-size: 1.2rem;\n        font-weight: 1000;\n        color: #66ff99;\n        background-color: black;\n        border: 2px solid #66ff99;\n        border-radius: 50px;\n        font-family: 'Inter', sans-serif;\n    }\n\n    .Main-section-projects {\n        position: absolute;\n        width: 400px;\n        height: 100%;\n        margin-left: 75%;\n        display: flex;\n    }\n</style>\n\n<div class=\"Main\">\n    <section class=\"Main-section\">\n        <div class=\"Main-section-description\">\n            <h1>DAOVOTION</h1>\n            <h3>Apoya el financiamiento del OSS y gana dinero en el Metaverso.</h3>\n            <p>DAOVOTION es una plataforma de organizaciones decentralizadas (DAO), que gestiona el recaudo para proyectos de Software Libre (FOSS), mediante la venta de tierras ligadas al Metaverso Abierto: Las Meta Islas.</p>\n            <a href=\"/governance/\" use:link>Saber mas</a>\n            <!-- <a href=\"/projects/\" use:link>Explorar proyectos</a> -->\n        </div>\n        <div class=\"Main-section-projects\">\n            <Carrousel />\n        </div>\n    </section>\n    <Interaction />\n</div>","<div>\n    <h1>Estamos trabajando...</h1>\n</div>","<div>\n    <h1>Estamos trabajando...</h1>\n</div>","<div>\n    <h1>Estamos trabajando...</h1>\n</div>","<div>\n    <h1>Estamos trabajando...</h1>\n</div>","<script>\n    import Footer from \"../components/Footer.svelte\";\n    import Header from \"../components/Header.svelte\";\n    import Project from \"../components/Project.svelte\";\n    import { writable, derived } from 'svelte/store';\n    import { projects } from \"../store/Projects\";\n\n    let term = writable('');\n    let items = writable(projects);\n    let filtered = derived([term, items], ([$term, $items]) => $items.filter(x => x.name.includes($term) || x.description.includes($term)));\n\tlet val = '';\n\t$: term.set(val);\n</script>\n\n<style>\n    .Projects {\n        color: white;\n        background-color: black;\n    }\n\n    .Projects-search {\n        width: 400px;\n        height: auto;\n        padding: 10px 20px;\n        display: flex;\n        border: 2px solid #66ff99;\n        border-radius: 30px;\n        font-family: 'Inter', sans-serif;\n        margin-top: 30px;\n        margin-left: 35%;\n    }\n\n    .Projects-search i {\n        font-size: 1rem;\n        color: #66ff99;\n        margin-right: 5%;\n    }\n\n    .Projects-search input {\n        border: 0;\n        outline: 0;\n        font-size: 1rem;\n        background-color: black;\n        color: white;\n    }\n\n    .Projects-list {\n        text-align: center;\n    }\n\n    .Projects-list p {\n        margin-top: 12%;\n        margin-bottom: 12%;\n    }\n\n    .Projects-list div {\n        margin: 0px 50px 0px 50px;\n        display: inline-flex;\n    }\n</style>\n\n<div class=\"Projects\">\n    <Header />\n    <div class=\"Projects-search\">\n        <i class=\"fa-solid fa-magnifying-glass\"></i>\n        <input type=\"text\" placeholder=\"Buscar proyecto\" bind:value={val} id=\"searchInput\">\n    </div>\n    <div class=\"Projects-list\">\n        {#each $filtered as project}\n            <div>\n                <Project {...project}></Project>\n            </div>\n        {:else}\n            <p>No pudimos encontrar ese proyecto.</p>\n        {/each}\n    </div>\n    <Footer />\n</div>","<script>\n\timport Router from 'svelte-spa-router'\n\timport Layaout from './Layaout.svelte';\n\timport Blog from './routes/Blog.svelte';\n\timport CreateProject from './routes/CreateProject.svelte';\n\timport Governance from './routes/Governance.svelte';\n\timport Help from './routes/Help.svelte';\n\timport Projects from './routes/Projects.svelte';\n\n\tconst routes = {\n\t\t'/': Layaout,\n\n\t\t'/projects/': Projects,\n\n\t\t'/governance/': Governance,\n\n\t\t'/blog/': Blog,\n\n\t\t'/help/': Help,\n\n\t\t'/create_project/': CreateProject\n\t}\n</script>\n\n<Router {routes}/>\n\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","text","data","createTextNode","space","empty","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","cancelable","$$","event","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","defaultPrevented","bubble","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","push","seen_callbacks","Set","flushidx","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","key","undefined","get_spread_object","spread_props","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","switch_instance_spread_levels","params","getLocation","hashPosition","window","location","substr","qsPosition","querystring","loc","addEventListener","removeEventListener","$loc","link","opts","linkOpts","tagName","toLowerCase","updateLink","updated","charAt","preventDefault","disabled","history","replaceState","state","__svelte_spa_router_scrollX","scrollX","__svelte_spa_router_scrollY","scrollY","hash","scrollstateHistoryHandler","currentTarget","val","routes","prefix","restoreScrollState","RouteItem","constructor","path","_sveltesparouter","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","parse","conditions","userData","_pattern","_keys","match","startsWith","matches","exec","out","decodeURIComponent","async","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","popStateChanged","scrollTo","lastLoc","componentObj","unsubscribeLoc","newLoc","checkConditions","$$invalidate","loading","loadingParams","loaded","default","onDestroy","scrollRestoration","DaovotionLogo","img","img_src_value","div","div4","div0","div1","div2","div3","nav","ul","li0","a0","li1","a1","li2","a2","li3","a3","SpanishFlag","img0","img0_src_value","img1","img1_src_value","EnglishFlag","img2","img2_src_value","button","p0","p1","p2","header","h20","h30","h21","h31","IslaImg","div8","div7","h1","i0","i1","div6","h3","div5","h22","description","logo","score","funds","price","projects","project0_spread_levels","project1_spread_levels","project2_spread_levels","project3_spread_levels","project4_spread_levels","section","handler","each_blocks","each_1_else","iterations","term","items","filtered","$term","$items","x","includes","Layaout","Projects","Governance","Blog","Help","CreateProject","body"],"mappings":"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"}